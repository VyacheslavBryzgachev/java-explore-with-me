{
	"info": {
		"_postman_id": "ba664d6d-b04b-4cb9-9db5-e1fff99aef76",
		"name": "feature_comment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21626937"
	},
	"item": [
		{
			"name": "Validation",
			"item": [
				{
					"name": "Создать комментарий, несуществующий пользователь",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userId",
								"value": "-1",
								"type": "text"
							},
							{
								"key": "eventId",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\" : \"You can use various shortcuts to switch between the editor and different tool windows, change the editor size, switch focus, or return to the original layoutПоменял123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создать комментарий, несуществующее событие",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userId",
								"value": "1",
								"type": "text"
							},
							{
								"key": "eventId",
								"value": "-1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\" : \"You can use various shortcuts to switch between the editor and different tool windows, change the editor size, switch focus, or return to the original layoutПоменял123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создать комментарий, текст меньше 100 символов",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userId",
								"value": "1",
								"type": "text"
							},
							{
								"key": "eventId",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\" : \"текст\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создать комментарий, больше 500 символов",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userId",
								"value": "1",
								"type": "text"
							},
							{
								"key": "eventId",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\" : \"Когда император Александр Павлович окончил венский совет, то он захотел по Европе проездиться и в разных государствах чудес посмотреть. Объездил он все страны и везде через свою ласковость всегда имел самые междоусобные разговоры со всякими людьми, и все его чем-нибудь удивляли и на свою сторону преклонять хотели, но при нем был донской казак Платов, который этого склонения не любил и, скучая по своему хозяйству, все государя домой манил. И чуть если Платов заметит, что государь чем-нибудь иностранным очень интересуется, то все провожатые молчат, а Платов сейчас скажет: так и так, и у нас дома свое не хуже есть, – и чем-нибудь отведет.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создать комментарий, без обязательного параметра userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userId",
								"value": "1",
								"type": "text",
								"disabled": true
							},
							{
								"key": "eventId",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\" : \"Когда император Александр Павлович окончил венский совет, то он захотел по Европе проездиться и в разных государствах чудес посмотреть. Объездил он все страны и везде через свою ласковость всегда имел самые междоусобные разговоры со всякими людьми, и все его чем-нибудь удивляли и на свою сторону преклонять хотели, но при нем был донской казак Платов, который этого склонения не любил и, скучая по своему хозяйству, все государя домой манил. И чуть если Платов заметит, что государь чем-нибудь иностранным очень интересуется, то все провожатые молчат, а Платов сейчас скажет: так и так, и у нас дома свое не хуже есть, – и чем-нибудь отведет.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создать комментарий, без обязательного параметра eventId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userId",
								"value": "1",
								"type": "text"
							},
							{
								"key": "eventId",
								"value": "1",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\" : \"Когда император Александр Павлович окончил венский совет, то он захотел по Европе проездиться и в разных государствах чудес посмотреть. Объездил он все страны и везде через свою ласковость всегда имел самые междоусобные разговоры со всякими людьми, и все его чем-нибудь удивляли и на свою сторону преклонять хотели, но при нем был донской казак Платов, который этого склонения не любил и, скучая по своему хозяйству, все государя домой манил. И чуть если Платов заметит, что государь чем-нибудь иностранным очень интересуется, то все провожатые молчат, а Платов сейчас скажет: так и так, и у нас дома свое не хуже есть, – и чем-нибудь отведет.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создать комментарий, пустое тело запроса",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "userId",
								"value": "1",
								"type": "text"
							},
							{
								"key": "eventId",
								"value": "1",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменить комментарий, не существующий id комментария",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "eventId",
								"value": "1",
								"type": "text",
								"disabled": true
							},
							{
								"key": "userId",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Custom mappers are used to solve specific conversion requirements. To achieve this, we have to define a method to do the conversion. Then we must notify MapStruct about the method. Finally, MapStruct will call the method to do the conversion from source to target.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменить комментарий, несуществующий пользователь",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "eventId",
								"value": "1",
								"type": "text",
								"disabled": true
							},
							{
								"key": "userId",
								"value": "-1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Custom mappers are used to solve specific conversion requirements. To achieve this, we have to define a method to do the conversion. Then we must notify MapStruct about the method. Finally, MapStruct will call the method to do the conversion from source to target.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменить комментарий, без обязательного параметра userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "eventId",
								"value": "1",
								"type": "text",
								"disabled": true
							},
							{
								"key": "userId",
								"value": "-1",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Custom mappers are used to solve specific conversion requirements. To achieve this, we have to define a method to do the conversion. Then we must notify MapStruct about the method. Finally, MapStruct will call the method to do the conversion from source to target.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменить комментарий, пустое тело запроса",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "eventId",
								"value": "1",
								"type": "text",
								"disabled": true
							},
							{
								"key": "userId",
								"value": "-1",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Custom mappers are used to solve specific conversion requirements. To achieve this, we have to define a method to do the conversion. Then we must notify MapStruct about the method. Finally, MapStruct will call the method to do the conversion from source to target.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comment/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить все комментарии события, несуществующий id события",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
									"     pm.response.to.have.status(200);",
									"});",
									"",
									"const target = pm.response.json();",
									"",
									"pm.test(\"Должен вернуться пустой список\", function () {",
									"    pm.expect(target.length).to.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comment/event/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment",
								"event",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получить комментарий события по идентификатору, несуществующий id комментария",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {",
									"     pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comment/event/1/comment/-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment",
								"event",
								"1",
								"comment",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удалить комментарий, пользователь не найден",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {",
									"     pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "userId",
								"value": "-1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/comment/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удалить комментарий, комментарий не найден",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {",
									"     pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "userId",
								"value": "-1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/comment/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comment",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Создать комментарий",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "userId",
						"value": "1",
						"type": "text"
					},
					{
						"key": "eventId",
						"value": "1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\" : \"You can use various shortcuts to switch between the editor and different tool windows, change the editor size, switch focus, or return to the original layout\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/comment",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Изменить комментарий",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const source = JSON.parse(pm.request.body.raw);",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Комментарий должен содержать поля: commentator, text\", function () {",
							"pm.expect(target).to.have.property('commentator');",
							"pm.expect(target).to.have.property('text');",
							"});",
							"",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {",
							"    pm.expect(target.text).to.not.be.null;",
							"    pm.expect(source.text).equal(target.text, 'Комментарий должен соотвествовать отправленному в запросе');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "eventId",
						"value": "1",
						"type": "text",
						"disabled": true
					},
					{
						"key": "userId",
						"value": "1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"Custom mappers are used to solve specific conversion requirements. To achieve this, we have to define a method to do the conversion. Then we must notify MapStruct about the method. Finally, MapStruct will call the method to do the conversion from source to target.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/comment/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получить все комментарии события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;    ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Комментарии должны содержать поля: commentator, text\", function () {",
							"    pm.expect(target[0]).to.have.property('commentator');",
							"    pm.expect(target[0]).to.have.property('text');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comment/event/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment",
						"event",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получить комментарий события по идентификатору",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {",
							"    pm.response.to.be.ok;    ",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"const target = pm.response.json();",
							"",
							"pm.test(\"Комментарии должны содержать поля: commentator, text\", function () {",
							"    pm.expect(target).to.have.property('commentator');",
							"    pm.expect(target).to.have.property('text');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/comment/event/1/comment/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment",
						"event",
						"1",
						"comment",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удалить комментарий",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 204 и данные в формате json\", function () {",
							"     pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "userId",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/comment/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"comment",
						"1"
					]
				}
			},
			"response": []
		}
	]
}